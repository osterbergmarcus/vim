snippet des "describe('test', () => {})"
describe('${1:<SomeComponent />}', (): void => {
	${2}
});
endsnippet

snippet it "it('testing', () => {})"
it('${1:just works}', (): void => {
	${2}
});
endsnippet

snippet bef "beforeEach()"
beforeEach((): void => {
	${1}
});
endsnippet

snippet aft "afterEach()"
afterEach((): void => {
	${1}
});
endsnippet

snippet con "console.log()"
console.log('${1}', ${2})
endsnippet

snippet rnfc "React Native Functional Component"
// @flow

import * as React from 'react';
import { View } from 'react-native';

type Props = {
	foo: string,
}

const ${1:`!v expand('%:t:r')`} = ({ ${3:...props} }: Props) => (
	${4:<View />}
);

$1.defaultProps = {
};

export default $1;
endsnippet

snippet storybook "React Native storybook"
/* @flow */

import * as React from 'react'
import Description from 'storybook/util/Description'
import { storiesOf } from '@storybook/react-native'
import { action } from '@storybook/addon-actions'
import $1 from 'app/ui/presentational/$1'

storiesOf('${1:`!v expand('%:t:r:r')`}', module)
	.addDecorator(story => <Description description="${2:$1 does ...}">{story()}</Description>)
	.add('Default', () => <$1 onPress={action('onPress')}/>)
endsnippet

snippet ip "Import presentational"
import ${1:Component} from 'app/ui/presentational/$1'
endsnippet

snippet ic "Import connected"
import ${1:Component} from 'app/ui/connected/$1'
endsnippet

snippet il "Import layout"
import ${1:Component} from 'app/ui/layouts/$1'
endsnippet

snippet esl "eslint disable"
// eslint-disable-next-line ${1:no-shadow}
endsnippet
